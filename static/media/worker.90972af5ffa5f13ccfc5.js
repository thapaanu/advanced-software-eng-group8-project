onmessage=function(r){if("start"===r.data.action){var a=JSON.parse(r.data.all_layouts),e=JSON.parse(r.data.pyramid);startSolving(a,e)}};var startSolving=function(r,a){startrecursiveSolver(r,a,0,0,0),postMessage("done")},startrecursiveSolver=function r(a,e,t,n,s){for(;0!==e[t][n][s];)if(++t>4&&(t=0,++n>4&&(n=0,++s>4)))return;for(var o=function(o){for(var i=a[o].layouts,f=0;f<i.length;f++)for(var v=i[f],u=0;u<v.length;u++){for(var l=t-v[u][0],p=n-v[u][1],g=s-v[u][2],h=!0,d=0;d<v.length;d++){var c=l+v[d][0],I=p+v[d][1],S=g+v[d][2];if(c<0||c>4||I<0||I>4||S<0||S>4){h=!1;break}if(!isPresentInPyramid(t,n,s)){h=!1;break}if(0!==e[c][I][S]){h=!1;break}}if(h){for(var y=[],m=0;m<5;m++){for(var P=[],b=0;b<5;b++){for(var k=[],x=0;x<5;x++)k.push(e[m][b][x]);P.push(k)}y.push(P)}for(var J=0;J<v.length;J++){var N=l+v[J][0],O=p+v[J][1],M=g+v[J][2];y[N][O][M]=a[o].shapeIndex}var _=a.filter((function(r){return parseInt(r.shapeIndex)!==parseInt(a[o].shapeIndex)}));0===_.length?postMessage({solution:JSON.stringify(y)}):r(_,y,t,n,s)}}},i=0;i<a.length;i++)o(i)},isPresentInPyramid=function(r,a,e){return!(r<0||a<0||e<0)&&(r<=4-a&&e<=4-a)};